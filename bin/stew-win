#!/bin/bash

# Window management for Hyprland

set -e

# Find and manage windows
find_window() {
    command -v jq >/dev/null || { echo "jq not found" >&2; exit 1; }
    command -v fuzzel >/dev/null || { echo "fuzzel not found" >&2; exit 1; }

    # Get window list and show in fuzzel
    local choice exit_code
    choice=$(hyprctl clients -j |
        jq -r '.[] | "\(.workspace.id) \(.class) — \(.title)"' |
        sort |
        fuzzel --dmenu --prompt="Window (↵:switch | ⇧↵:move): ") || exit_code=$?
    exit_code=${exit_code:-0}

    [[ -z "$choice" ]] && exit 0

    local ws addr
    ws=$(echo "$choice" | awk '{print $1}')
    addr=$(hyprctl clients -j | jq -r ".[] | select(\"\(.workspace.id) \(.class) — \(.title)\" == \"$choice\") | .address")

    case $exit_code in
        0)  # Normal Enter - switch to workspace
            hyprctl dispatch workspace "$ws" >/dev/null 2>&1
            ;;
        10) # Alt+Enter (custom-1) - move window here
            local current_ws
            current_ws=$(hyprctl activeworkspace -j | jq -r .id)
            hyprctl dispatch movetoworkspacesilent "$current_ws,address:$addr" >/dev/null 2>&1
            ;;
    esac
}

# List all windows (no interaction)
list_windows() {
    command -v jq >/dev/null || { echo "jq not found" >&2; exit 1; }

    hyprctl clients -j | jq -r '.[] | "  \(.workspace.id) \(.class) — \(.title)"' | sort
}

# Main logic
case "${1:-find}" in
    find)
        find_window
        ;;
    list)
        list_windows
        ;;
    *)
        echo "Usage: $0 [find|list]" >&2
        exit 1
        ;;
esac
